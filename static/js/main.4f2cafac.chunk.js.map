{"version":3,"sources":["components/СontactForm/СontactForm.jsx","components/СontactElement/СontactElement.jsx","components/СontactList/СontactList.jsx","components/Filter/Filter.jsx","components/App.jsx","index.js"],"names":["ContactForm","state","name","number","handleContact","e","console","log","currentTarget","value","setState","handleSubmitContact","preventDefault","props","onSubmit","reset","this","onChange","type","pattern","title","required","Component","ContactElement","onClick","id","ContactList","contacts","onDeleteContact","map","contact","Filter","App","filter","formSubmitHandler","newContact","uuidv4","some","alert","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f2cafac.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleContact = e => {\n    console.log(e.currentTarget);\n    console.log(e.currentTarget.name);\n    console.log(e.currentTarget.value);\n\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmitContact = e => {\n    e.preventDefault();\n    //   console.log(this.state);\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmitContact}>\n        <h2>Name</h2>\n        <label>\n          <input\n            value={this.state.name}\n            onChange={this.handleContact}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\n             Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <h2>Number</h2>\n        <label>\n          <input\n            value={this.state.number}\n            onChange={this.handleContact}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы,\n             тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <div>\n          <button type=\"submit\">Add contact</button>\n        </div>\n      </form>\n    );\n  }\n}\n","// import { ContactForm } from \"components/СontactForm/СontactForm\";\n\nexport const ContactElement = ({ onClick, name, number, id }) => {\n  return (\n    <li key={id}>\n      <span>\n        {name}: {number}\n      </span>\n      <button type=\"button\" onClick={onClick}>\n        Delete\n      </button>\n    </li>\n  );\n};\n","import { ContactElement } from 'components/СontactElement/СontactElement';\n\nexport const ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactElement\n          name={contact.name}\n          number={contact.number}\n          onClick={() => onDeleteContact(contact.id)}\n        />\n      ))}\n    </ul>\n  );\n};\n","export const Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      <p> Find contact by name</p>\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n","import { Component } from 'react';\nimport { ContactForm } from './СontactForm/СontactForm';\nimport { ContactList } from './СontactList/СontactList';\nimport { Filter } from './Filter/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n// uuidv4(); // ⇨ '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d'\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    // name: '',\n    // number: ''\n  };\n\n  formSubmitHandler = ({ name, number }) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    // console.log(contact.id);\n    contacts.some(contact => contact.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [newContact, ...contacts],\n        }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n    console.log(e.currentTarget.value);\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}